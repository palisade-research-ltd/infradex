# File: docker/docker-compose.yml
# Complete orchestration for infradex services

version: '3.8'

services:
  # ClickHouse Database Service
  database:
    build:
      context: .
      dockerfile: database.Dockerfile
    container_name: infradex-clickhouse
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native protocol
      - "9009:9009"  # Interserver HTTP
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
      - ./clickhouse/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/users.xml:/etc/clickhouse-server/users.xml
      - ./init-trading-schema.sql:/docker-entrypoint-initdb.d/init-trading-schema.sql
    environment:
      - CLICKHOUSE_DB=default
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - infradex-network

  # Rust Collector Service
  collector:
    build:
      context: .
      dockerfile: collector.Dockerfile
    container_name: infradex-collector
    depends_on:
      database:
        condition: service_healthy
    environment:
      - RUST_LOG=info
      - CONFIG_PATH=/app/config/collector-config.toml
    volumes:
      - ./collector-config.toml:/app/config/collector-config.toml
      - ./logs/collector:/app/logs
      - ./data/collector:/app/data
    ports:
      - "8090:8090"  # Metrics port
      - "8091:8091"  # Health check port
    restart: unless-stopped
    networks:
      - infradex-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Features service (for technical indicators)
  features:
    build:
      context: .
      dockerfile: features.Dockerfile
    container_name: infradex-features
    depends_on:
      database:
        condition: service_healthy
    environment:
      - RUST_LOG=info
      - DATABASE_URL=clickhouse://database:9000/trading_data
    volumes:
      - ./logs/features:/app/logs
    restart: unless-stopped
    networks:
      - infradex-network

  # Optional: Signals service (for trading signals)
  signals:
    build:
      context: .
      dockerfile: signals.Dockerfile
    container_name: infradex-signals
    depends_on:
      database:
        condition: service_healthy
      features:
        condition: service_started
    environment:
      - RUST_LOG=info
      - DATABASE_URL=clickhouse://database:9000/trading_data
    volumes:
      - ./logs/signals:/app/logs
    restart: unless-stopped
    networks:
      - infradex-network

networks:
  infradex-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  clickhouse_data:
    driver: local
  clickhouse_logs:
    driver: local
